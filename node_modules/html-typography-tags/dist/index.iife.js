var TypographyPlainJS = (function (exports) {
  'use strict';

  class Errors {
    ERROR_MESSAGE = (message) => {
      return `Error in component: "${this.component}",  error message: "${message}"`;
    };
    component = '';

    constructor(component = 'No component') {
      this.component = component;
    }

    add(error) {
      const textError = this.ERROR_MESSAGE(error);
      throw new Error(textError);
    }
  }

  const customError = new Errors('link');

  const linkComponent = (params) => {
    if (typeof params != 'object') {
      customError.add('"params" is not "object"');
    }

    if (typeof params.attributes == '') {
      customError.add('empty attributes');
    }

    if (typeof params.content == '') {
      customError.add('empty content');
    }

    const { attributes, content } = params;

    return `<a ${attributes}>${content}</a>`;
  };

  // Content Button

  // we will probably loose id param during changes that Arthur is doing.
  const buttonMainBlock = (id, href, text) => {
    return `<a class="mlContentButton" href="${href}" data-link-id="${id}" 
  style="font-family: "Poppins", sans-serif; background-color: #d6685e; border-radius: 3px; color: #ffffff; display: inline-block; font-size: 17px; font-weight: 400; line-height: 23px; padding: 15px 0 15px 0; text-align: center; text-decoration: none; width: 260px;" target="_self">
  ${text}
  </a>`;
  };

  const buttonComponent = (params) => {
    const { id, href, text } = params;
    const error = new Errors('contentButton');

    if (id == '') {
      error.add('No id button');
    }
    if (href == '') {
      error.add('No href button');
    }
    if (text == '') {
      error.add('No text button');
    }

    return buttonMainBlock(id, href, text);
  };

  // Component heading

  // TODO replace with a link component
  const headingMainBlock = (hrefTitle, idTitle, textTitle) => {
    return `<a href="${hrefTitle}" data-link-id="${idTitle}" style="text-decoration: none; color: #111111; text-transform: none; font-style: normal; text-decoration: none;" target="_self">${textTitle}</a>`;
  };

  function heading (params) {
    const { hrefTitle, idTitle, textTitle } = params;
    const error = new Errors('contentTitleText');

    if (hrefTitle == '') {
      error.add('No hrefTitle');
    }
    if (idTitle == '') {
      error.add('No idTitle');
    }
    if (textTitle == '') {
      error.add('No textTitle');
    }

    return headingMainBlock(hrefTitle, idTitle, textTitle);
  }

  exports.buttonComponent = buttonComponent;
  exports.heading = heading;
  exports.linkComponent = linkComponent;

  return exports;

})({});
