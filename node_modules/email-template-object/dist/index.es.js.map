{"version":3,"file":"index.es.js","sources":["../src/factoryTwo.js"],"sourcesContent":["class displayFactoryTwo {\n\n    error = false;\n    partial = '';\n\n    isError = () => {\n        return this.error;\n    }\n    setPartial = (string) => {\n      this.partial = string;\n    }\n\n    getPartial = () => {\n      return this.partial;\n    }\n\n    display = () => {\n      this.getPartial();\n    }\n\n    create = (settings) => {\n        \n        // if (!settings)\n        // add error checking here.. probably few versions to test\n\n        const { component, params, subcomponents } = settings;\n\n        // cover a case when subcomponents didnt passed and we apply { }\n\n\n        let partial;\n\n        \n        \n\n\n          //here i want to apply a check and see if everything is fine, if not we generate error = true \n          try {\n            partial = component(params, subcomponents);\n\n            return partial;\n            // this.setPartial(partial);\n            // console.log(partial);\n\n          } catch (err) {\n            // statements to handle any exceptions\n            console.log(err);\n            // this.error = true;\n          }\n\n    }\n\n\n    \n}\n\nexport default displayFactoryTwo;\n\n\n//     return {\n//       error: false, \n//       params: params,\n//       subcomponents: subcomponents,  \n      \n//       display: () => { \n  \n//           //here i want to apply a check and see if everything is fine, if not we generate error = true \n//           try {\n//             component(params, subcomponents) \n//           } catch (err) {\n//             // statements to handle any exceptions\n//             console.log(err);\n//             this.error = true;\n//           }\n\n          \n      \n//       },\n        \n//       checks: () => { return []; },  \n        \n        \n//       init: () => {\n  \n//       },\n      \n//       try: () => {\n  \n//       },\n\n// \t  get: () => { return component; },\n\n//       checks: () => {\n//           checks.map(() => {\n\n//           })\n\n//           if(subcomponents){\n//             //   subcomponents.map((component) => {\n//             //     component.init();\n//             //   })\n//           }\n\n        \n\n//       },\n\n//       // log: () => { \n//       //     console.log('123');\n\n          \n//       // //     console.log(this.display()) \n//       // },\n\n\n\n//       //get: () => {name:name, regEx:regEx, replace:replace(), isError:false},\n  \n//       //combine: () => {return {name:name, regEx:regEx, replace:replace()}},\n  \n//       // I want to have a better way to report errors, so each callback can report an issue, so we can track it better \n//       isError: () => { if(this.error){ return 'errror is here'; } }\n//     }\n//   }\n\n\n//   displayFactory.log = () => {\n//     // log: () => { \n//       console.log('123');\n//       console.log(this.display()) \n//   // },\n//   }\n  \n//   export default displayFactory;\n"],"names":["displayFactoryTwo","error","partial","isError","setPartial","string","getPartial","display","create","settings","component","params","subcomponents","err","console","log"],"mappings":"AAAA,MAAMA,iBAAN,CAAwB;AAEpBC,EAAAA,KAAK,GAAG,KAAH,CAAA;AACLC,EAAAA,OAAO,GAAG,EAAH,CAAA;AAEPC,EAAAA,OAAO,GAAG,MAAM;AACZ,IAAA,OAAO,KAAKF,KAAZ,CAAA;GADG,CAAA;EAGPG,UAAU,GAAIC,MAAD,IAAY;IACvB,IAAKH,CAAAA,OAAL,GAAeG,MAAf,CAAA;GADQ,CAAA;AAIVC,EAAAA,UAAU,GAAG,MAAM;AACjB,IAAA,OAAO,KAAKJ,OAAZ,CAAA;GADQ,CAAA;AAIVK,EAAAA,OAAO,GAAG,MAAM;AACd,IAAA,IAAA,CAAKD,UAAL,EAAA,CAAA;GADK,CAAA;EAIPE,MAAM,GAAIC,QAAD,IAAc;IAKnB,MAAM;MAAEC,SAAF;MAAaC,MAAb;AAAqBC,MAAAA,aAAAA;AAArB,KAAA,GAAuCH,QAA7C,CAAA;AAKA,IAAA,IAAIP,OAAJ,CAAA;;IAOE,IAAI;AACFA,MAAAA,OAAO,GAAGQ,SAAS,CAACC,MAAD,EAASC,aAAT,CAAnB,CAAA;AAEA,MAAA,OAAOV,OAAP,CAAA;KAHF,CAOE,OAAOW,GAAP,EAAY;MAEZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAA,CAAA;AAED,KAAA;GA5BD,CAAA;AApBc;;;;"}